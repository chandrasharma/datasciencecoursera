install packages(KernSmooth)
install packages("KernSmooth")
install package("KernSmooth")
install package ("KernSmooth")
install packages ("KernSmooth")
Install packages ("KernSmooth")
Install packages("KernSmooth")
Install packages(KernSmooth)
Install package(KernSmooth)
help.search("Install")
install.packages("KernSmooth")
library(KernSmooth)
q()
pwd
data <- read.csv("hw1_data.csv")
View(data)
dat <- data.frame(Ozone=c(1,2))
dat
col <- subset(data, select=c("Ozone"))
col
check <- in.na("Col")
check <- is.na("Col")
check
check <- is.na(Col)
M1<-length(M11$DAID[M11$DAID =="NA"])
M1<-length(Col$DAID[Col$DAID =="NA"])
M1<-length("Col"$DAID["Col"$DAID =="NA"])
naa<-data.frame(COl=sum(is.na(x))
col
miss<-is.na("Col")
miss<-is.nan("Col")
mis
miss
miss <- is.nan("Col")
miss
miss <- is.na("Col")
miss
length(which(is.na(Col[1])==T))
length(which(is.na(Ozone[1])==T))
data
length(which(is.na(data[1])==T))
length(which(is.na(data[1])==T))
data
length(which(is.na(data[1])==T))
length(which(is.na("data")==T))
length(which(is.na(data[1])==T))
subset(data, !(v1 %in% c("b","d","e")))
subset(data, !(ozone %in% c("b","d","e")))
subset(data, !(Ozone %in% c("b","d","e")))
subset(data, !(Ozone %in% c("b","d","e")))
s <- subset(data, !(Ozone %in% c("b","d","e")))
s
s <- subset(data, >(Ozone %in% c(31)))
s <- subset(data, > (Ozone %in% c(31)))
s <- subset(data, !(Ozone %in% c(20)))
s
s <- subset(data, !(Ozone %in% c(>20)))
m <- matrix(c(1:10, 11:20), nrow = 10, ncol = 2)
m
apply(m, 1, mean)
data
data[apply(data[, -1], MARGIN = 1, function(x) all(x > 31)), ]
data[apply(data[, -1], MARGIN = 1, function(x) all(x > 31))
data[apply(data[, -1], function(x) all(x > 31)), ]
data[apply(data[, -1], MARGIN = 2, function(x) all(x > 31))
data[apply(data[, -1], MARGIN = 2, function(x) all(x > 31)), ]
data
print data[data.Month==6]
print data[(data.Ozone>6]
print data[(data.Ozone > 31]
data[(data.Ozone > 31]
data(data.Ozone > 31
greater <- data.Ozone > 31
greater <- data > 31
greater
length (data)
length (data , [])
length (data , )
length (data , )
length(data[data==TRUE])
length(Col[COla==TRUE])
length(Col[COl\==TRUE])
length(Col[COl==TRUE])
col
length(col[COl==TRUE])
length(col[cOl==TRUE])
col
length(col[cOl==TRUE])
print data[(data.Ozone > 31) & (data.Temp > 90)]['Solar.R'].mean()
data[(data.Ozone > 31) & (data.Temp > 90)]['Solar.R'].mean()
data[(data.Ozone > 31)
data[(data.Ozone > 31)]
data[(data > 31)]
data[(data > 31)]
d <- data.ozone >30
d <- hw1_data.ozone >30
d <- hw1_data.Ozone >30
data <- read.csv (hw1_data.csv)
data <- read.csv(hw1_data.csv)
data <- read.csv(hw1_data)
data
sub.data<-data[data[,1] != "na",]
V <- sub.data<-data[data[,1] != "NA",]
V
V <- sub.data<-data[data[,1] != "223",]
V
V <- sub.data<-data[data[,1] != "20",]
V
V <- sub.data<-data[data[,2] != "131",]
V
V <- sub.data<-data[data[,2] != "223",]
V <- sub.data<-data[data[,2] != "223",]
V
V <- sub.data<-data[data[,2] != "131",]
V
data[!(data$v1 %in% c("20", "14", "30")), ]
DATA
DATAdata
data
t <- data[!(data$v1 %in% c("20", "14", "30")), ]
t
t <- data[!(data$Ozone %in% c("20", "14", "30")), ]
t
t <- data[!(data$v1 %in% > c("20", "14", "30")), ]
t <- data[!(data$v1 in c(>30)), ]
t <- data[!(data$v1 c(>30)), ]
t <- data[!(data$Ozone c(>30)), ]
t <- data[!(data$Ozone >30), ]
t
t <- data[!(data$Ozone >9), ]
t
p <- is.na(t)
p
paste("Today is", date())
paste("x",1:3,sep="")
paste("x",1:3)
seted()
setwd()
?"<<-"
a <- makeVector()
getwd()
setwd("C:/Personal/Data_Science/R/Week-2/Assignment-2")
source('C:/Personal/Data_Science/R/Week-2/Assignment-2/makevector.R')
makeVector(3)
j <- makeVector()
j(3)
j <- makeVector(3)
j
source('C:/Personal/Data_Science/R/Week-2/Assignment-2/makevector.R')
cachemean (3)
j <-cachemean ()
j <- cachemean (3)
j <- cachemean (3...)
j <- cachemean (3, ...)
source('C:/Personal/Data_Science/R/Week-2/Assignment-2/makevector.R')
a <- makeVector()
a
a <- makeVector()
a
class(a)
class(a$set)
a$set(c(1,2,3,4,5,6))
a$get()
cachemean(a)
cachemean(a)
source('C:/Personal/Data_Science/R/Week-2/Assignment-2/makevector.R')
M <- makeCacheMatrix()
V <- makeVector()
class(M)
class(V)
class(M$set)
class(V$set)
M$set(matrix(1:4, 2, 2))
M$get()
M$getInverse()
M$setInverse(9)
cacheSolve(M)
cacheSolve(M)
M$setInverse(NULL)
cacheSolve(M)
cacheSolve(M)
M_I <- M$getInverse()
M1 <- M$getInverse()
M1 %*% M_I
source('C:/Personal/Data_Science/R/Week-2/Assignment-2/makevector.R')
M$setInverse(9)
cacheSolve(M)
mat <- makeCacheMatrix()
mat$get(1:4, 2,2)
mat$set(matrix(1:4, 2,2))
mat$get()
mat$calcInv()
mat$calcInv()
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$calcInv()
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$calcInv()
class(mat)
mat
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$calcInv(5)
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$calcInv(5)
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$set(5)
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$get()
mat$calcInv()
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat$setInv()
mat$setInv(5)
mat$getInv()
cach <- cacheSolve()
cmat
mat
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat
cacheSolve(m)
cacheSolve(Inv)
cacheSolve(mat)
mat$setInv(NULL)
cacheSolve(mat)
mat$get(matrix(1:4, 2,2))
mat$set(matrix(1:4, 2,2))
mat$get()
cacheSolve(mat)
cacheSolve(mat)
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mat)
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mat)
source('C:/Users/csharma/ProgrammingAssignment2/cachematrix.R')
mat <- makeCacheMatrix()
